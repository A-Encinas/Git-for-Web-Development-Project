
    1. What is Semantic HTML? 
    2. What is HTML used for? 
    3. What is an attribute and where do we put it? 
    4. What is the h1 tag used for? How many times should I use it on a page?
    5. Name two tags that have required attributes
    6. What do we put in the head of our HTML document? 
    7. What is an id? 
    8. What elements can I add an id to? 
    9. How many times can I use the same id on a page? 
    10. What is a class? 
    11. What elements can I add a class to? 
    12. How many times can I use the same class on a page? 
    13. How do I get my link to open in a new tab?
    14. What is the alt attribute used for? 
    15. How do I reference an id?
    16. What is the difference between a section and a div
    17. What is CSS used for? 
    18. How to we select an element? Example - every h2 on the page
    19. What is the difference between a class and an id? - Give me an example of when I might use each one
    20. How do we select classes in CSS?
."the class-name"
    21. How do we select a p element with a single class of “human””?
p.human
    22. What is a parent child selector? When would this be useful? 
to be able to select a line to affect other than an element
    23. How do you select all links within a div with the class of sidebar?
.sidebar
    24. What is a pseudo selector?
a state of a selected element
    25. What do we use the change the spacing between lines?
padding
    26. What do we use to change the spacing between letters?
letter-spacing
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
text-transform
    28. How do I add a 1px border around my div that is dotted and black?
border 1px dotted black
    29. How do I select everything on the page? 
.universal
    30. How do I write a comment in CSS?
/*
    31. How do I find out what file I am in, when I am using the command line? 
ls
    32. Using the command line - how do I see a list of files/folders in my current folder?
ls
    33. How do I remove a file via the command line? Why do I have to be careful with this? 
cd
    34. Why should I use version control? 
uf something is wrong or you need to go back you can 
    35. How often should I commit to github?
everytime you make a change
    36. What is the command we would use to push our repo up to github? 
git push
    37. Walk me through Lambda's git flow. 
1. Fork. 
2. Add me (`YOUR GITHUB HANDLE`) as a collaborator. 
3. In git/git bash: `cd`  into your lambda projects folder and clone repo: `git clone <paste repo url here>`
4. Create and switch to your own branch: `git checkout -b your-name`
Side note: The -b creates a new branch. To switch to an existing branch type `git checkout already-existing-branch`
6. Begin working on your project. 
Once you have completed your first task/feature:
7. `git status` to view your changes (this step is optional, but it can be very handy when you're not sure about what changes have been made).
8. `git add .` to add all changes. (The `.` means add everything. If you only want to add a single file it would be `git add file-you-want-to-add.example`)
At this point, you have added all of your changes to your branch. But your changes and your branch are only dating now. They need *commit*ment! 
9. `git commit -m "I do"` 
Now that the changes we've added have been married to our branch, it's time to let people know! To do that we are going to push our wonderful news up to GitHub! (The `I do` is a required message - try to clearly articulate the changes you made to your code!)
10. `git push origin branch-name` and 
 BOOM! The world 
 celebrates 
the newly joined changes to your branch.
11. Go to GitHub and create a pull request to your master branch. 
